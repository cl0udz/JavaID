<root>
    <javaid vultype='JID'>
        <function>
            <rule name='$fs::. -> write $var_'>
                <regmatch>
                    <regexp>write\(</regexp>
                </regmatch>
            </rule>
        </function>
        <function>
            <rule name='$fs::. -> write $var_'>
                <regmatch>
                    <regexp>toByteArray\(</regexp>
                </regmatch>
            </rule>
        </function>




        <function>
            <rule name='$http_api::. -> write $var_'>
                <regmatch>
                    <regexp>@Get</regexp>
                </regmatch>
            </rule>
        </function>
        <function>
            <rule name='$dp::push_rules -> write $var_'>
                <regmatch>
                    <regexp>public String store(String json)</regexp>
                </regmatch>
            </rule>
        </function>

        <!-- <function>
            <rule name='$http_api::. -> write $var_'>
                <regmatch>
                    <regexp>.*public Response .*</regexp>
                </regmatch>
            </rule>
        </function> -->
        <function>
            <rule name='$db::. -> exec $var_'>
                <regmatch>
                    <regexp>executeQuery\(</regexp>
                </regmatch>
            </rule>
        </function>
        <!-- <function>
            <rule name='$net_svc::flow -> write $var_'>
                <regmatch>
                    <regexp>applyFlowRules\(</regexp>
                </regmatch>
            </rule>
        </function> -->
        <!-- <function>
            <rule name='$net_svc::flow -> write $var_'>
                <regmatch>
                    <regexp>removeFlowRules\(</regexp>
                </regmatch>
            </rule>
        </function>
        <function>
            <rule name='$net_svc::flow -> write $var_'>
                <regmatch>
                    <regexp>pushFlowMetrics\(</regexp>
                </regmatch>
            </rule>
        </function>
        <function>
            <rule name='$net_svc::flow -> write $var_'>
                <regmatch>
                    <regexp>applyFlowRule\(</regexp>
                </regmatch>
            </rule>
        </function>
        <function>
            <rule name='$net_svc::flow -> write $var_'>
                <regmatch>
                    <regexp>applyRule\(</regexp>
                </regmatch>
            </rule>
        </function> -->
    </javaid>
    <javaid vultype='XXE'>
        <function>
            <rule name='$fs::. -> read $var_'>
                <regmatch>
                    <regexp>new\s+SAXReader\(\)</regexp>
                </regmatch>
            </rule>
        </function>
        <function>
            <rule name='$fs::. -> read $var_'>
                <regmatch>
                    <regexp>new\s+SAXBuilder\(\)</regexp>
                </regmatch>
            </rule>
        </function>
        <function>
            <rule name='$fs::. -> read $var_'>
                <regmatch>
                    <regexp>new\s+SAXParser\(</regexp>
                </regmatch>
            </rule>
        </function>
        <function>
            <rule name='$fs::. -> read $var_'>
                <regmatch>
                    <regexp>createXMLReader\(</regexp>
                </regmatch>
            </rule>
        </function>
        <function>
            <rule name='$fs::. -> read $var_'>
                <regmatch>
                    <regexp>newDocumentBuilder\(</regexp>
                </regmatch>
            </rule>
        </function>
        <function>
            <rule name='$fs::. -> read $var_'>
                <regmatch>
                    <regexp>createXMLStreamReader\(</regexp>
                </regmatch>
            </rule>
        </function>
    </javaid>
    <!-- <javaid vultype='ObjectDeserialization'>
        <function>
            <rule name='readObject'>
                <regmatch>
                    <regexp>\.readObject\(</regexp>
                </regmatch>
            </rule>
        </function>
        <function>
            <rule name='parseObject'>
                <regmatch>
                    <regexp>JSON\.parseObject\(</regexp>
                </regmatch>
            </rule>
        </function>
        <function>
            <rule name='readValue'>
                <regmatch>
                    <regexp>ObjectMapper\.readValue</regexp>
                </regmatch>
            </rule>
        </function>
        <function>
            <rule name='fromXML'>
                <regmatch>
                    <regexp>fromXML\(</regexp>
                </regmatch>
            </rule>
        </function>
        <function>
            <rule name='readUnshared'>
                <regmatch>
                    <regexp>readUnshared\(</regexp>
                </regmatch>
            </rule>
        </function>
    </javaid> -->
    <!-- <javaid vultype='SSRF'>
        <function>
            <rule name='HttpURLConnection'>
                <regmatch>
                    <regexp>openConnection\(|getInputStream\(</regexp>
                </regmatch>
            </rule>
        </function>
        <function>
            <rule name='URL'>
                <regmatch>
                    <regexp>URL\(|openStream\(</regexp>
                </regmatch>
            </rule>
        </function>
	    <function>
            <rule name='ImageIO'>
                <regmatch>
                    <regexp>ImageIO\.read\(</regexp>
                </regmatch>
            </rule>
        </function>    
        <function>
            <rule name='HttpClient'>
                <regmatch>
                    <regexp>HttpClient\(|executeMethod\(</regexp>
                </regmatch>
            </rule>
        </function>
	    <function>
            <rule name='Socket'>
                <regmatch>
                    <regexp>new\sSocket\(</regexp>
                </regmatch>
            </rule>
        </function>    
        <function>
            <rule name='OkHttpClient'>
                <regmatch>
                    <regexp>\.newCall\(|Request.Builder\(\)</regexp>
                </regmatch>
            </rule>
        </function> 
    </javaid> -->
    <!-- <javaid vultype='FileUpload'>
        <function>
            <rule name='MultipartFile'>
                <regmatch>
                    <regexp>\.getOriginalFilename\(|MultipartFile\s</regexp>
                </regmatch>
            </rule>
        </function>
    </javaid> -->
    <javaid vultype='File'>
        <function>
            <rule name='$fs::. -> write $var_'>
                <regmatch>
                    <regexp>\.createNewFile\(|FileOutputStream\(</regexp>
                </regmatch>
            </rule>
        </function>
        <function>
            <rule name='$fs::. -> write $var_'>
                <regmatch>
                    <regexp>new\sFileInputStream\(</regexp>
                </regmatch>
            </rule>
        </function>
        <function>
            <rule name='$fs::. -> read $var_'>
                <regmatch>
                    <regexp>readline</regexp>
                </regmatch>
            </rule>
        </function>
        <function>
            <rule name='$fs::. -> write var#i'>
                <regmatch>
                    <regexp>new\sBufferedInputStream</regexp>
                </regmatch>
            </rule>
        </function>
    </javaid>
    <javaid vultype='EXEC'>
        <function>
            <rule name='$sys_process::. -> exec $var_'>
                <regmatch>
                    <regexp>getRuntime\(\)\.exec\(</regexp>
                </regmatch>
            </rule>
        </function>
        <function>
            <rule name='$sys_process::. -> exec $var_'>
                <regmatch>
                    <regexp>ProcessBuilder|ProcessBuilder\.start</regexp>
                </regmatch>
            </rule>
        </function>
        <function>
            <rule name='$sys_process::. -> exec $var_'>
                <regmatch>
                    <regexp>GroovyShell\.evaluate</regexp>
                </regmatch>
            </rule>
        </function>
    </javaid>
    <javaid vultype='SQLi'>
        <function>
            <rule name='$db::. -> read $var_'>
                <regmatch>
                    <regexp>(into|where)[^\$]*(\$\{[^,#=\s]+\})</regexp>
                </regmatch>
            </rule>
        </function>
    </javaid>
</root>
